<html>
<head>
    <title>JavaScript</title>
    <style>
        /* Internal CSS */
        body {
            display: flex;
            font-family: Arial, sans-serif;
        }
        
        .sidebar {
            width: 20%;
            background-color: #f4f4f4;
            padding: 20px;
        }
        
        .content {
            flex: 1;
            padding: 20px;
        }
        
        .topic-link {
            display: block;
            margin-bottom: 10px;
            text-decoration: none;
            color: #333;
            font-weight: bold;
            cursor: pointer;
        }
table, th, td
{
border: 1px solid black;
border-collapse: collapse;
}
    </style>
</head>
<body>
    <div class="sidebar" id="sidebar">
        <!-- Topic links will be added dynamically -->
    </div>
    <div class="content" id="content">
        <font style="font-family:times new roman;"><h1>JavaScript Definition</h1>JavaScript is a programming language commonly used in web development. It was originally developed by Netscape as a means to add dynamic and interactive elements to websites. While JavaScript is influenced by Java, the syntax is more similar to C and is based on ECMAScript, a scripting language developed by Sun Microsystems.
<p>JavaScript is a client-side scripting language, which means the source code is processed by the client's web browser rather than on the web server. This means JavaScript functions can run after a webpage has loaded without communicating with the server. For example, a JavaScript function may check a web form before it is submitted to make sure all the required fields have been filled out. The JavaScript code can produce an error message before any information is actually transmitted to the server.</p>
<p>Like server-side scripting languages, such as PHP and ASP, JavaScript code can be inserted anywhere within the HTML of a webpage. However, only the output of server-side code is displayed in the HTML, while JavaScript code remains fully visible in the source of the webpage. It can also be referenced in a separate .JS file, which may also be viewed in a browser.</p>
Below is an example of a basic JavaScript function that adds two numbers. The function is called with the parameters 7 and 11. If the code below were included in the HTML of a webpage, it would display the text "18" in an alert box. 
<pre>
&lt;script&gt;
  function sum(a,b)
   {
     return a + b;
   }
   var total = sum(7,11);
   alert(total); 
&lt;/script&gt;</pre>
<p>JavaScript functions can be called within < script > tags or when specific events take place. Examples include onClick, onMouseDown, onMouseUp, onKeyDown, onKeyUp,
onFocus, onBlur, onSubmit, and many others. While standard JavaScript is still used for performing basic client-side functions, many web developers now prefer to use JavaScript
libraries like jQuery add more advanced dynamic elements to websites.</p>
    </div>
    
    <script>
        // Define your topics and content
        var topics = [
            {
                title: '~Definition',
                content: '<html><iframe style="height:475%; width:100%; border:none;" src="JS-definition.html"></iframe></html>'
            },
            {
                title: '~Nature of JavaScript',
                content: '<html><iframe style="height:100%; width:100%; border:none;" src="JS-nature.html"></iframe></html>'
            },
            {
                title: '~Features of JavaScript',
                content: '<html><iframe style="height:230%; width:100%; border:none;" src="JS-features.html"></iframe></html>'
            },
            {
                title: '~Limitations of JavaScript',
                content: '<html><iframe style="height:100%; width:100%; border:none;" src="JS-limitations.html"></iframe></html>'
            },
            {
                title: '~Lexical Structure',
                content: '<html><iframe style="height:100%; width:100%; border:none;" src="JS-lexical.html"></iframe></html>'
            },
            {
                title: '~Identifiers and Reserved Words',
                content: '<html><iframe style="height:390%; width:100%; border:none;" src="JS-identifiers.html"></iframe></html>'
            },
            {
                title: '~Optional Semicolon',
                content: '<html><iframe style="height:180%; width:100%; border:none;" src="JS-optional-semicolon.html"></iframe></html>'
            },
            {
                title: '~JavaScript Data Types',
                content: '<html><iframe style="height:510%; width:100%; border:none;" src="JS-datatypes.html"></iframe></html>'
            },
            {
                title: '~RDBMS',
                content: '<html><iframe style="height:135%; width:100%; border:none;" src="PHP-rdbms.html"></iframe></html>'
            },
            {
                title: '~Connecting to MySQL',
                content: '<html><iframe style="height:100%; width:100%; border:none;" src="PHP-connecting-to-mysql.html"></iframe></html>'
            },
            {
                title: '~Creating MySQL Database',
                content: '<html><iframe style="height:210%; width:100%; border:none;" src="PHP-creating-database.html"></iframe></html>'
            },
            {
                title: '~State Management',
                content: '<html><iframe style="height:100%; width:100%; border:none;" src="PHP-state-management.html"></iframe></html>'
            },
            {
                title: '~Cookies in PHP',
                content: '<html><iframe style="height:455%; width:100%; border:none;" src="PHP-cookies.html"></iframe></html>'
            },
        ];
        
        // Function to create topic links
        function createTopicLinks() {
            var sidebarDiv = document.getElementById("sidebar");
            
            topics.forEach(function(topic) {
                var topicLink = document.createElement("a");
                topicLink.classList.add("topic-link");
                topicLink.textContent = topic.title;
                topicLink.onclick = function() {
                    showContent(topic.content);
                };
                sidebarDiv.appendChild(topicLink);
            });
        }
        
        // Function to show content
        function showContent(content) {
            var contentDiv = document.getElementById("content");
            contentDiv.innerHTML = content;
        }
        
        // Call the createTopicLinks function to generate the links
        createTopicLinks();
    </script>
</body>
</html>